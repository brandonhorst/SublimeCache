{
	"content":"\/\/\/ This sample persistent class represents a person.\r\n\/\/\/ <p>Maintenance note: This class is used by some of the bindings samples.\r\nClass Sample.Person Extends (%Persistent, %Populate, %XML.Adaptor)\r\n{\r\n\r\nParameter EXTENTQUERYSPEC = \"Name,SSN,Home.City,Home.State\";\r\n\r\n\/\/ define indices for this class\r\n\r\n\/\/\/ Define a unique index for <property>SSN<\/property>.\r\nIndex SSNKey On SSN [ Type = index, Unique ];\r\n\r\n\/\/\/ Define an index for <property>Name<\/property>.\r\nIndex NameIDX On Name [ Data = Name ];\r\n\r\n\/\/\/ Define an index for embedded object property <b>ZipCode<\/b>.\r\nIndex ZipCode On Home.Zip [ Type = bitmap ];\r\n\r\n\/\/ define properties for this class\r\n\r\n\/\/\/ Person's name.\r\nProperty Name As %String(POPSPEC = \"Name()\") [ Required ];\r\n\r\n\/\/\/ Person's Social Security number. This is validated using pattern match.\r\nProperty SSN As %String(PATTERN = \"3N1\"\"-\"\"2N1\"\"-\"\"4N\") [ Required ];\r\n\r\n\/\/\/ Person's Date of Birth.\r\nProperty DOB As %Date(POPSPEC = \"Date()\");\r\n\r\n\/\/\/ Person's home address. This uses an embedded object.\r\nProperty Home As Address;\r\n\r\n\/\/\/ Person's office address. This uses an embedded object.\r\nProperty Office As Address;\r\n\r\n\/\/\/ Person's spouse. This is a reference to another persistent object.\r\nProperty Spouse As Person;\r\n\r\n\/\/\/ A collection of strings representing the person's favorite colors.\r\nProperty FavoriteColors As list Of %String(JAVATYPE = \"java.util.List\", POPSPEC = \"ValueList(\"\",Red,Orange,Yellow,Green,Blue,Purple,Black,White\"\"):2\");\r\n\r\n\/\/\/ Person's age.<br>\r\n\/\/\/ This is a calculated field whose value is derived from <property>DOB<\/property>.\r\nProperty Age As %Integer [ Calculated, SqlComputeCode = { Set {Age}=##class(Sample.Person).CurrentAge({DOB})\r\n}, SqlComputed, SqlComputeOnChange = DOB ];\r\n\r\n\/\/\/ This class method calculates a current age given a date of birth <var>date<\/var>.\r\nClassMethod CurrentAge(date As %Date = \"\") As %Integer [ CodeMode = expression ]\r\n{\r\n$Select(date=\"\":\"\",1:($ZD($H,8)-$ZD(date,8)\\10000))\r\n}\r\n\r\n\/\/\/ Prints the property <property>Name<\/property> to the console.\r\nMethod PrintPerson()\r\n{\r\n\tWrite !, \"Name: \", ..Name\r\n\tQuit\r\n}\r\n\r\n\/\/\/ A simple, sample method: add two numbers (<var>x<\/var> and <var>y<\/var>) \r\n\/\/\/ and return the result.\r\nMethod Addition(x As %Integer = 1, y As %Integer = 1) As %Integer\r\n{\r\n\tQuit x + y \/\/ comment\r\n}\r\n\r\n\/\/\/ A simple, sample expression method: returns the value 99.\r\nMethod NinetyNine() As %Integer [ CodeMode = expression ]\r\n{\r\n99\r\n}\r\n\r\n\/\/\/ Invoke the <method>PrintPerson<\/method> on all <class>Person<\/class> objects \r\n\/\/\/ within the database.\r\nClassMethod PrintPersons()\r\n{\r\n\t\/\/ use the extent result set to find all person\r\n\tSet extent = ##class(%ResultSet).%New(\"Sample.Person:Extent\")\r\n\tDo extent.Execute()\r\n\t\r\n\tWhile (extent.Next()) {\r\n\t\tSet person = ..%OpenId(extent.GetData(1))\r\n\t\tDo person.PrintPerson()\r\n\t}\r\n\t\r\n\tQuit\r\n}\r\n\r\n\/\/\/ Prints out data on all persons within the database using SQL to \r\n\/\/\/ iterate over all the person data.\r\nClassMethod PrintPersonsSQL()\r\n{\r\n\t\/\/ use dynamic SQL result set to find person data\r\n\tSet query = ##class(%ResultSet).%New(\"%DynamicQuery:SQL\")\r\n\tDo query.Prepare(\"SELECT ID, Name, SSN FROM Sample.Person ORDER BY Name\")\r\n\tDo query.Execute()\r\n\t\r\n\tWhile (query.Next()) {\r\n\t\tWrite !,\"Name: \", query.Get(\"Name\"), ?30, query.Get(\"SSN\")\r\n\t}\r\n\t\r\n\tQuit\r\n}\r\n\r\n\/\/\/ This is a sample of how to define an SQL stored procedure using a \r\n\/\/\/ class method. This method can be called as a stored procedure via \r\n\/\/\/ ODBC or JDBC.<br>\r\n\/\/\/ In this case this method returns the concatenation of a string value.\r\nClassMethod StoredProcTest(name As %String, ByRef response As %String) As %Integer [ SqlName = Stored_Procedure_Test, SqlProc ]\r\n{\r\n\t\/\/ Set response to the concatenation of name.\r\n\tSet response = name _ \"||\" _ name\r\n\tQUIT 29\r\n}\r\n\r\n\/\/\/ This is a sample of how to define an SQL stored procedure using a \r\n\/\/\/ class method. This method can be called as a stored procedure via \r\n\/\/\/ ODBC or JDBC.<br>\r\n\/\/\/ This method performs an SQL update operation on the database \r\n\/\/\/ using embedded SQL. The update modifies the embedded properties \r\n\/\/\/ <var>Home.City<\/var> and <var>Home.State<\/var> for all rows whose \r\n\/\/\/ <var>Home.Zip<\/var> is equal to <var>zip<\/var>.\r\nClassMethod UpdateProcTest(zip As %String, city As %String, state As %String) As %Integer [ SqlProc ]\r\n{\r\n\tNew %ROWCOUNT,%ROWID\r\n\t\r\n\t&sql(UPDATE Sample.Person \r\n\tSET Home_City = :city, Home_State = :state \r\n\tWHERE Home_Zip = :zip)\r\n\t\r\n\t\/\/ Return context information to client via %SQLProcContext object\r\n\tIf ($g(%sqlcontext)'=$$$NULLOREF) { \r\n\t\tSet %sqlcontext.SQLCode = SQLCODE\r\n\t\tSet %sqlcontext.RowCount = %ROWCOUNT\r\n\t}\r\n\tQUIT 1\r\n}\r\n\r\n\/\/\/ A sample class query that defines a result set that returns Person data \r\n\/\/\/ ordered by <property>Name<\/property>.<br>\r\n\/\/\/ This query can be used within another Cach&eacute; method (using the\r\n\/\/\/ <class>%ResultSet<\/class> class), from Java, or from ActiveX.<br>\r\n\/\/\/ This query is also accessible from ODBC and\/or JDBC as the SQL stored procedure \r\n\/\/\/ <b>SP_Sample_By_Name<\/b>.\r\nQuery ByName(name As %String = \"\") As %SQLQuery(CONTAINID = 1, SELECTMODE = \"RUNTIME\") [ SqlName = SP_Sample_By_Name, SqlProc ]\r\n{\r\nSELECT ID, Name, DOB, SSN\r\nFROM Sample.Person\r\nWHERE (Name %STARTSWITH :name)\r\nORDER BY Name\r\n}\r\n\r\n<Storage name=\"Default\">\r\n<Data name=\"PersonDefaultData\">\r\n<Value name=\"1\">\r\n<Value>%%CLASSNAME<\/Value>\r\n<\/Value>\r\n<Value name=\"2\">\r\n<Value>Name<\/Value>\r\n<\/Value>\r\n<Value name=\"3\">\r\n<Value>SSN<\/Value>\r\n<\/Value>\r\n<Value name=\"4\">\r\n<Value>DOB<\/Value>\r\n<\/Value>\r\n<Value name=\"5\">\r\n<Value>Home<\/Value>\r\n<\/Value>\r\n<Value name=\"6\">\r\n<Value>Office<\/Value>\r\n<\/Value>\r\n<Value name=\"7\">\r\n<Value>Spouse<\/Value>\r\n<\/Value>\r\n<Value name=\"8\">\r\n<Value>FavoriteColors<\/Value>\r\n<\/Value>\r\n<\/Data>\r\n<DataLocation>^Sample.PersonD<\/DataLocation>\r\n<DefaultData>PersonDefaultData<\/DefaultData>\r\n<ExtentSize>100<\/ExtentSize>\r\n<IdLocation>^Sample.PersonD<\/IdLocation>\r\n<IndexLocation>^Sample.PersonI<\/IndexLocation>\r\n<Property name=\"%%CLASSNAME\">\r\n<Selectivity>100.0000%<\/Selectivity>\r\n<\/Property>\r\n<Property name=\"Age\">\r\n<Selectivity>1.6129%<\/Selectivity>\r\n<\/Property>\r\n<Property name=\"DOB\">\r\n<Selectivity>1.0000%<\/Selectivity>\r\n<\/Property>\r\n<Property name=\"FavoriteColors\">\r\n<OutlierSelectivity>.3:<\/OutlierSelectivity>\r\n<Selectivity>2.1875%<\/Selectivity>\r\n<\/Property>\r\n<Property name=\"Home\">\r\n<Selectivity>1.0000%,City:3.8462%,State:2.3256%,Street:1.0000%,Zip:1.0000%<\/Selectivity>\r\n<\/Property>\r\n<Property name=\"Name\">\r\n<Selectivity>1.0000%<\/Selectivity>\r\n<\/Property>\r\n<Property name=\"Office\">\r\n<Selectivity>1.0000%,City:4.0000%,State:2.3810%,Street:1.0000%,Zip:1.0000%<\/Selectivity>\r\n<\/Property>\r\n<Property name=\"Spouse\">\r\n<Selectivity>100.0000%<\/Selectivity>\r\n<\/Property>\r\n<SequenceNumber>24<\/SequenceNumber>\r\n<SQLMap name=\"$Person\">\r\n<BlockCount>-4<\/BlockCount>\r\n<\/SQLMap>\r\n<SQLMap name=\"IDKEY\">\r\n<BlockCount>-8<\/BlockCount>\r\n<\/SQLMap>\r\n<SQLMap name=\"NameIDX\">\r\n<BlockCount>-4<\/BlockCount>\r\n<\/SQLMap>\r\n<SQLMap name=\"SSNKey\">\r\n<BlockCount>-4<\/BlockCount>\r\n<\/SQLMap>\r\n<SQLMap name=\"ZipCode\">\r\n<BlockCount>-4<\/BlockCount>\r\n<\/SQLMap>\r\n<StreamLocation>^Sample.PersonS<\/StreamLocation>\r\n<Type>%Library.CacheStorage<\/Type>\r\n<\/Storage>\r\n}\r\n\r\n"
}